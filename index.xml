<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>heapdump</title>
    <link>https://heapdump.cc/</link>
    <description>Recent content on heapdump</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 31 Dec 2019 15:28:12 +0800</lastBuildDate>
    
	<atom:link href="https://heapdump.cc/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>MySQL查看表结构</title>
      <link>https://heapdump.cc/mysql-table-info/</link>
      <pubDate>Tue, 31 Dec 2019 15:28:12 +0800</pubDate>
      
      <guid>https://heapdump.cc/mysql-table-info/</guid>
      <description> 查看表结构 SELECT * FROM information_schema.tables WHERE table_schema = &#39;db_name&#39; AND table_name = &#39;table_name&#39;  查看字段 SELECT * FROM information_schema.columns WHERE table_schema = &#39;db_name&#39; AND table_name = &#39;table_name&#39;  </description>
    </item>
    
    <item>
      <title>Bit Torrent</title>
      <link>https://heapdump.cc/bit-torrent/</link>
      <pubDate>Mon, 04 Nov 2019 10:53:34 +0800</pubDate>
      
      <guid>https://heapdump.cc/bit-torrent/</guid>
      <description>本文翻译自《How Does BitTorrent Work? a Plain English Guide 》，由于
BitTorrent如何工作 BitTorrent是用于传输大文件的最常见协议之一。2013年2月，BitTorrent占全球所有带宽的3.35％，占所有文件共享带宽（6％）的一半以上。 本文不谈论如何使用BitTorrent上传下载内容，也不讨论哪个客户端是最好的，只是深入探讨它的技术层面的内容。任何没有网络或BitTorrent基础知识都任都可以读懂这篇文章。 让我们开始吧！
目录 1、谁创建了BitTorrent？ 2、BitTorrent与客户服务器端下载对比 3、概述 4、什么是Torrent描述文件 5、of BitTorrent的片段选择算法 6、Sub什么是子件和件选择算法？ 6.1、严格政策 6.2、抢先 6.3、随机第一部分 6.4、残局模式 7、Using使用针锋相对的资源分配 8窒息算法 9乐观 10、反突 11、If如果仅上传，该怎么办？ 12、什么是追踪器？ 12.1、公共追踪器 12.2、私人追踪器 12.3、多轨洪流 13、磁链-无轨洪流 14、分布式哈希表 15、路由表 16、Bit攻击BitTorrent
谁创建了BitTorrent 布萊姆·科亨（Bram Cohen）在2001年发明了BitTorrent协议,他用Python编写了第一个客户端实现。在2002年夏天，他收集了免费的色情内容，以吸引测试用户。
BitTorrent与客户服务器端下载对比 在传统下载中，服务器上载文件，而客户端下载文件。
对于热门文件，这不是很有效。 1、500个人同时下载同一文件会使服务器承受巨大的压力,从而限制上行速度，结果客户端无法快速下载文件。 2、客户端服务器模式要花很多钱，我们支付的服务器的费用会随着文件的受欢迎程度而增加。 3、它是集中式的，如果系统死了，该文件就不再存在了，也就没有人可以下载它。
BitTorrent旨在解决这些问题。
| 客户服务器模式 | BitTorrent |
|&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- | &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; | | 集中式 | 分布式 | | 热门文件会造成服务端产生压力 | 热门文件不会造成任何压力 | | 花费大量的钱，花费多少取决于文件有多少人下载 |花费并不会随着文件热门程度增长|</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://heapdump.cc/about/</link>
      <pubDate>Thu, 31 Oct 2019 09:53:12 +0800</pubDate>
      
      <guid>https://heapdump.cc/about/</guid>
      <description> Email:chaogu.c(AT)qq.com  </description>
    </item>
    
  </channel>
</rss>